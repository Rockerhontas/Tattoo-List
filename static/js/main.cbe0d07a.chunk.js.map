{"version":3,"sources":["Tattoo.js","test.js","tattoolist.js","components/Header.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Tattoo","props","addCount","setState","count","state","hasTriggered","this","info","img","title","className","src","width","alt","type","onClick","Component","test","handleClick","event","byStyle","target","value","filterTattoos","tattoos","filter","style","id","renderAll","map","tattoo","key","name","tattoolist","Greeting","navbar","class","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbe0d07a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.scss\";\n\nexport default class Tattoo extends Component {\nconstructor (props) {\n    super(props);\n    this.state = {\n        count: 0\n    };\n}\n\naddCount = () => {\n\nthis.setState({count:this.state.count + 1, hasTriggered: true});\n};\n\n    render() {\n        const { img, title} = this.props.info;\n\n        return (\n            <article className=\"tattoo\">\n                \n                <section className=\"media\">\n                <img src={img} width=\"350px\" alt=\"book\" />\n<div className=\"content\">\n<h2>{title}</h2>\n            <p>Likes: {this.state.count}</p>\n\n{\n    !this.state.hasTriggered ?\n\n    <button className=\"likebtn\" width=\"100%\" type=\"button\" onClick={this.addCount}>\n        Like\n        </button> : null \n    }\n                </div>\n                </section>\n            \n            </article>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Tattoo from \"./Tattoo\"\n\nexport default class test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          tattoos: [\n              \n            {\n                id: 1,\n                img: \"https://rockerhontas.com/apptattoos/woman.jpg\",\n                title: \"Woman\",\n                style: \"Linework\" \n        },\n        {\n            id: 2,\n            img: \"https://rockerhontas.com/apptattoos/feather.jpg\",\n            title: \"Feder\",\n            style: \"Realistik\" \n        },\n        {\n            id: 3,\n            img: \"https://rockerhontas.com/apptattoos/skull.jpg\",\n            title: \"Totenkopf\",\n            style: \"Realistik\" \n        },\n        {\n            id: 4,\n            img: \"https://rockerhontas.com/apptattoos/hp2.jpg\",\n            title: \"HeiligtÃ¼mer des Todes\",\n            style: \"Watercolor\" \n        },\n        {\n            id: 5,\n            img: \"https://rockerhontas.com/apptattoos/cactus.jpg\",\n            title: \"Kaktus\",\n            style: \"Sketchstyle\" \n        },\n        {\n            id: 6,\n            img: \"https://rockerhontas.com/apptattoos/planets.jpg\",\n            title: \"PLaneten\",\n            style: \"Linework\" \n        },\n        {\n            id: 7,\n            img: \"https://rockerhontas.com/apptattoos/mandala.jpg\",\n            title: \"Mandala\",\n            style: \"Mandala\" \n        },\n        {\n            id: 8,\n            img: \"https://rockerhontas.com/apptattoos/lettering.jpg\",\n            title: \"Letterings\",\n            style: \"Letterings\" \n        },\n        {\n            id: 9,\n            img: \"https://rockerhontas.com/apptattoos/leaf.jpg\",\n            title: \"Leaf\",\n            style: \"Watercolor\" \n        },\n        {\n            id: 10,\n            img: \"https://rockerhontas.com/apptattoos/hp.jpg\",\n            title: \"Harry Potter\",\n            style: \"Linework\" \n        },\n        {\n            id: 11,\n            img: \"https://rockerhontas.com/apptattoos/fuchs.jpg\",\n            title: \"Fuchs\",\n            style: \"Comic\" \n        },\n        {\n            id: 12,\n            img: \"https://rockerhontas.com/apptattoos/flower.jpg\",\n            title: \"Neo Traditional Peony\",\n            style: \"Traditional\" \n        },\n        {\n            id: 13,\n            img: \"https://rockerhontas.com/apptattoos/steuerrad.jpg\",\n            title: \"Steuerrad\",\n            style: \"Watercolor\" \n        },\n        {\n            id: 14,\n            img: \"https://rockerhontas.com/apptattoos/eule.jpg\",\n            title: \"Eule\",\n            style: \"Linework\" \n        },\n        {\n            id: 15,\n            img: \"https://rockerhontas.com/apptattoos/buddha.jpg\",\n            title: \"Buddha\",\n            style: \"Realistik\" \n        }\n        \n          \n        ],\n\n          filterTattoos: [],\n        }\n      }\n\n    \n      componentDidMount(){\n        this.setState({\n          filterTattoos: this.state.tattoos\n        })\n      }\n    \n      handleClick = event => {\n        const byStyle = event.target.value\n        let filterTattoos = []\n        if(event.target.value === 'all'){\n          filterTattoos = this.state.tattoos\n        } else{\n          filterTattoos = this.state.tattoos.filter(tattoos => tattoos.style === byStyle)\n        }\n        this.setState({filterTattoos: filterTattoos})\n      }\n    \n      render() {\nconst renderAll = \nthis.state.filterTattoos.map \n(tattoo => <Tattoo key={tattoo.name} info={tattoo} />)\n\n        return (\n        \n          <div>\n<section className=\"buttonform\">\n        <button className=\"filterbutton\" value='all' onClick={this.handleClick}>Alle</button>\n        <button className=\"filterbutton\" value='Realistik' onClick={this.handleClick}>Realistik\n        </button>\n        <button className=\"filterbutton\" value='Linework' onClick={this.handleClick}>Linework</button>\n        <button className=\"filterbutton\" value='Mandala' onClick={this.handleClick}>Mandala</button>\n        <button className=\"filterbutton\" value='Watercolor' onClick={this.handleClick}>Watercolor</button>\n</section>\n        <section className=\"column\">\n\n        <section className=\"tattoos\">\n            {renderAll}\n            </section>\n            </section>\n          </div>\n\n     \n        );\n      }\n    }\n\n\n\n\n   ","import React, { Component } from 'react'\n\nimport Test from \"./test\";\n\nexport default class tattoolist extends Component {\n\n\n\n    render() {\n        return (\n<Test />\n        )\n    }\n}\n","import React from 'react';\n\nconst hello = \"Simple Tattoo Archiv\";\nfunction Greeting(){\nreturn <h6>{hello}</h6>;\n}\nexport default Greeting;","import React from 'react'\nimport \"./navbar.scss\"\n\nexport default function navbar() {\n    return (\n        <nav className=\"navbar\">\n<i class=\"fas fa-anchor\"></i>         \n   <ul className=\"nav-links\">\n                <li>\n                    <a href=\"/\" className=\"nav-link\">\n                        Link</a>\n                    </li>\n\n                    <li>\n                    <a href=\"/\" className=\"nav-link\">\n                        Link</a>\n                    </li>\n\n                    <li>\n                    <a href=\"/\" className=\"nav-link\">\n                        Link</a>\n                    </li>\n\n                \n                </ul>\n        \n        </nav>\n    )\n}\n","import React from \"react\";\nimport Tattoolist from \"./tattoolist\";\nimport Greeting from \"./components/Header\";\nimport Navbar from \"./components/navbar\";\nimport \"./App.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst App = () => (\n<section> \n    <Navbar />\n <Greeting />\n<Tattoolist />\n</section>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}